<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>个人博客如何更为高效的使用</title>
    <url>/2024/03/24/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E6%9B%B4%E4%B8%BA%E9%AB%98%E6%95%88%E7%9A%84%E4%BD%BF%E7%94%A8-1/</url>
    <content><![CDATA[<p>思考如何更为高效的部署使用静态博客。</p>
]]></content>
      <categories>
        <category>灵感笔记</category>
      </categories>
      <tags>
        <tag>灵感</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Hexo+GitHub 搭建个人免费博客教程</title>
    <url>/2024/03/24/%E7%BE%A4%E6%99%96%E4%B8%AD%E4%BD%BF%E7%94%A8%20Hexo+GitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="1-Hexo博客搭建"><a href="#1-Hexo博客搭建" class="headerlink" title="1 Hexo博客搭建"></a>1 Hexo博客搭建</h1><h2 id="1-1-Docker部署hexo"><a href="#1-1-Docker部署hexo" class="headerlink" title="1.1 Docker部署hexo"></a>1.1 Docker部署hexo</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">docker create --name=hexo \</span><br><span class="line">-e HEXO_SERVER_PORT=4000 \</span><br><span class="line">-e GIT_USER="youname" \</span><br><span class="line">-e GIT_EMAIL="email@qq.com" \</span><br><span class="line">-v /volume1/docker/hexo/myblog:/app \</span><br><span class="line">-p 4000:4000 \</span><br><span class="line">bloodstar/hexo</span><br></pre></td></tr></tbody></table></figure>

<h2 id="1-2-ssh-key-部署"><a href="#1-2-ssh-key-部署" class="headerlink" title="1.2 ssh key 部署"></a>1.2 ssh key 部署</h2><p><strong>Docker会自动随机生成ssh key</strong>&nbsp;在 /app/.ssh 目录下面。自动部署请把ssh key添加到github 等平台。</p>
<p>GitHub，进入&nbsp;<strong>Settings</strong>，选择左边栏的 SSH and GPG keys，点击 New SSH key，Title 随便取，然后把 id_rsa.pub 里面的内容到复制到 Key 中，点击 Add SSH key。<br><img src="https://lei-1258171996.cos.ap-guangzhou.myqcloud.com/imgs/2024/202403240936524.png"><br>保存完毕以后，我们可以在本地验证一下连接。</p>
<h2 id="1-3-SSH-进入docker"><a href="#1-3-SSH-进入docker" class="headerlink" title="1.3 SSH 进入docker"></a>1.3 SSH 进入docker</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker ps <span class="comment"># 查看hexo的容器编号</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 682e0a19f679 /bin/bash</span><br></pre></td></tr></tbody></table></figure>

<h2 id="1-4-运行自定义用户自动运行脚本"><a href="#1-4-运行自定义用户自动运行脚本" class="headerlink" title="1.4 运行自定义用户自动运行脚本"></a>1.4 运行自定义用户自动运行脚本</h2><blockquote>
<p>用户可以在这里添加自动配置，自动安装插件，等各种启动docker运行的命令。<br>它将在Docker启动完成后自动调用运行</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">vi /app/useRun.sh</span><br></pre></td></tr></tbody></table></figure>

<h1 id="2-创建-GitHub-仓库"><a href="#2-创建-GitHub-仓库" class="headerlink" title="2 创建 GitHub 仓库"></a>2 创建 GitHub 仓库</h1><p>我们在自己 GitHub 的主页 repository 中点击右上角的 NEW，填写基本信息：</p>
<ul>
<li>Repository name 中输入<code>用户名.github.io</code>，一定要是这个名字！</li>
<li>勾选 Add a README file<br>填好后点击 Create repository 创建仓库。<br>  现在我们访问&nbsp;<code>https://用户名.github.io</code>（<a href="http://yaoleistable.github.io)可以看到默认界面./">http://yaoleistable.github.io）可以看到默认界面。</a></li>
</ul>
<h1 id="3-上传-hexo-程序到-GitHub"><a href="#3-上传-hexo-程序到-GitHub" class="headerlink" title="3 上传 hexo 程序到 GitHub"></a>3 上传 hexo 程序到 GitHub</h1><p>修改_config.yml 文件末尾的 Deployment 部分：<br><img src="https://lei-1258171996.cos.ap-guangzhou.myqcloud.com/imgs/2024/202403240952044.png"><br>修改成如下（修改为你的用户名与仓库名）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:yaoleistable/yaoleistable.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></tbody></table></figure>

<p>其实就是通过 SSH 进行连接，SSH 连接地址可以 直接在仓库&nbsp;<code>&lt;&gt;Code</code>&nbsp;里面看到：<br><img src="https://lei-1258171996.cos.ap-guangzhou.myqcloud.com/imgs/2024/202403241954930.png"></p>
<h1 id="4-Hexo-日常操作命令"><a href="#4-Hexo-日常操作命令" class="headerlink" title="4 Hexo 日常操作命令"></a>4 Hexo 日常操作命令</h1><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 进入hexo docker 环境。需要你已经安装了docker环境，并安装了上文提到的hexo docker</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 682e0a19f679 /bin/bash</span><br><span class="line"><span class="comment"># 运行完这条命令后，你就发现命令提示符变了，你此时进入了一个独立于你的主机运行环境的新的 node + hexo 开发环境了。</span></span><br><span class="line"><span class="comment"># 生成新页面 404</span></span><br><span class="line">hexo new page 404</span><br><span class="line"><span class="comment"># 新增新文章 2024-03-24-blog</span></span><br><span class="line">hexo new post 2024-03-24-blog</span><br><span class="line"><span class="comment"># 清理上次生成的静态网页，可以不运行，但你修改了一些源码后，很可能有各种不生效或错误</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成静态网页</span></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"><span class="comment"># gulp调用gulpfile.js压缩静态网页相关代码，减小网页体积</span></span><br><span class="line">gulp </span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用根目录中 _config.yml 文件的deploy配置的参数来部署你的静态网页</span></span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure>

<h1 id="5-参考文章"><a href="#5-参考文章" class="headerlink" title="5 参考文章"></a>5 参考文章</h1><ul>
<li><a href="https://tech.yemengstar.com/hexo%e7%b3%bb%e5%88%97%e6%95%99%e7%a8%8b-%e5%9c%a8hexo%e4%b8%8a%e5%8f%91%e5%b8%83%e6%96%87%e7%ab%a0-%e5%b0%8f%e7%99%bd%e5%90%91%e6%95%99%e7%a8%8b/">HEXO系列教程 | 在HEXO上发布文章 | 小白向教程 - 夜梦星尘の折腾日记</a></li>
<li><a href="https://www.jianshu.com/p/0f7c39826b2f">Docker部署hexo在github搭建博客 - 简书</a></li>
<li><a href="https://blog.17lai.site/posts/40300608/#SSH-%E8%BF%9B%E5%85%A5docker">[三万字教程]基于Hexo的matery主题搭建博客并深度优化一站式完全教程 | 夜法之书</a></li>
</ul>
]]></content>
  </entry>
</search>
